#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const program = require('commander')
const util = require('./util');

function generateUniqueConfigName() {
  let configName = 'master';
  let n = 0;
  while (fs.existsSync(util.getConfigFile(configName))) {
    configName = `master${++n}`;
  }
  return configName;
}

program
  .description('Makes a new evm config file.')
  .option('-n, --name <name>', 'Arbitrary user-chosen evm config name. Used when invoking \`evm\`', generateUniqueConfigName())
  .option('-o, --out <name>',  'Place generated files in \'src/out/$NAME\'', 'Testing')
  .option('-r, --root <path>', 'Fetch everything into this new directory', path.resolve(process.cwd(), 'electron'))
  .option('-t, --type <name>', 'Generate makefiles that follow the build type', 'testing')
  .parse(process.argv);

util.saveConfig(util.getConfigFile(program.name), {
  buildType: program.type,
  electronOutDir: program.out,
  electronRoot: program.root,
  gitCachePath: process.env.GIT_CACHE_PATH || '~/.git_cache',
});

process.stdout.write(program.name);
